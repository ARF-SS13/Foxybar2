
/* 
	Container for the Tab Table
*/
table.TabHeader {
	border: 1px solid green;
	width: 100%;
	margin: 0px;
	padding: 0px;
	font-size: inherit;
	background-color: rgb(0, 32, 0);
	box-sizing: border-box;
}
/* 
	A cell in the Tab Table
	background fills the cell
	text must be on one line, no wrapping
*/
table.TabHeader td {
	background-color: rgb(0, 64, 0);
	border: 1px solid green;
	color: rgb(0, 192, 0);
	/* font-weight: bold; */
	text-align: center;
	margin: auto;
	padding: auto;
	/* width: 100%; */
	white-space: nowrap;
	box-sizing: border-box;
}
/* 
	The above cell when hovered over
	but ONLY if its child contains an <a> tag
*/
table.TabHeader td:hover a {
	background-color: rgba(0, 128, 0, 0.8);
}
/*
	The above cell when selected
	use this, instead of TabHeader
*/
.TabCellselected {
	background-color: rgba(0, 128, 0, 0.8) !important;
	border: 1px solid green !important;
}
/* 
	<a> tag inside a cell
*/
table.TabHeader a {
	display: inline-block;
	color: lime;
	background-color: rgba(0, 0, 0, 0);
	width: 100%;
}
/* 
	The above <a> tag when hovered over
*/
table.TabHeader a:hover {
	color: lime;
	background-color: rgba(0, 128, 0, 0);
}
/* 
	Makes everything strikethrough
*/
.StruckThrough {
	position: relative;
}
.StruckThrough a {
	color: green !important;
}

.StruckThrough::after {
	content: "";
	position: absolute;
	width: 100%;
	height: 1px;
	top: 50%;
	left: 0;
	background: green;
}
/* 
	Container for the fancy FlexTable that is better than the Tab Table
*/
div.FlexTable {
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	width: 100%;
	margin: 0px;
	padding: 0px;
	font-size: inherit;
	background-color: rgb(0, 32, 0);
	border: 1px solid green;
	box-sizing: border-box;
}
/* 
	A cell in the FlexTable
	background fills the cell
	text must be on one line, no wrapping
*/
div.FlexTable a {
	display: flex;
	text-align: center !important;
	background-color: rgb(0, 64, 0);
	border: 1px solid green;
	color: lime;
	text-align: center;
	margin: 1px;
	padding: auto;
	white-space: nowrap;
	box-sizing: border-box;
	justify-content: center;
	flex-direction: column;
	flex: 1;
}
/* 
	The above cell when hovered over
*/
div.FlexTable a:hover {
	background-color: rgba(0, 128, 0, 0.8);
}








/* 
	Flex Container for a Setting Array
*/
div.SettingArray {
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	width: 100%;
	margin: 0px;
	padding: 0px;
	font-size: inherit;
	flex-basis: 100%;
	/* flex: 1; */
}

/* 
	Setting flexbox
	Contains one setting name and one setting value
*/
div.SettingFlex {
	display: flex;
	flex-direction: row;
	width: 100%;
	background-color: rgb(0, 32, 0);
	box-sizing: border-box;
	flex: 1;
}
/* 
	Setting Name
*/
.SettingName {
	display: flex;
	width: auto;
	padding: 5px;
	font-weight: bold;
	color: lime;
	text-align: center;
	line-height: 1;
	justify-content: center;
	flex-direction: column;
	flex: 1;
	white-space: nowrap;
	box-sizing: border-box;
	border: 1px solid green;
}
/* 
	Setting Value
*/
.SettingFlex a {
	text-decoration: none;
	margin: 0px !important;
	height: 100%;
	display: flex;
	background-color: rgb(0, 64, 0);
	width: 100%;
	color: lime;
	line-height: 1;
	justify-content: center;
	flex-direction: column;
	box-sizing: border-box;
	border: 1px solid green;
}

/* 
	Setting Value when hovered over
*/
.SettingFlex a:hover {
	background-color: green;
	color: lime;
}

/* 
	Flex Container for a Setting Array
	Basically the same as SettingArray, but it's a column
*/
div.SettingArrayCol {
	display: flex;
	flex-direction: column;
	width: 100%;
	margin: 0px;
	padding: 0px;
	font-size: inherit;
	flex: 1;
}

/* 
	Setting flexbox
	Contains one setting name and one setting value
*/
div.SettingFlexCol {
	display: flex;
	flex-direction: column;
	width: 100%;
	background-color: rgba(0, 32, 0);
	box-sizing: border-box;
	flex: 1;
}

/* 
	Setting Name
	Setup similar to SettingName, but it's a column
*/
.SettingNameCol {
	font-weight: bold;
	padding: 5px;
	color: lime;
	text-align: left;
	line-height: 1;
	box-sizing: border-box;
	border: 1px solid green;
	white-space: nowrap;
	display: flex;
	justify-content: center;
	flex-direction: column;
	white-space: wrap;
}

/* 
	Setting Value
*/
div.SettingFlexCol a {
	border: 1px solid green;
	text-decoration: none;
	padding: 5px;
	display: flex;
	/* margin: auto; */
	background-color: rgb(0, 64, 0);
	width: 100%;
	color: lime;
	line-height: 1;
	flex-grow: 1;
	box-sizing: border-box;
	word-wrap: break-word;
}
/* 
	Setting Value, but its not a link
*/
div.SettingFlexColInfo {
	border: 1px solid green;
	padding: 5px;
	display: flex;
	background-color: rgb(0, 64, 0);
	width: 100%;
	color: lime;
	line-height: 1;
	flex-grow: 1;
	box-sizing: border-box;
}

/* 
	Setting Value when hovered over
*/
div.SettingFlexCol a:hover {
	background-color: green;
}

/* 
	The following is for semi-generic setting flexboxes
*/


/* 
	Setting Value, but split into multiple columns
*/
div.SettingValueSplit {
	display: flex;
	flex-direction: row;
	background-color: rgba(0, 32, 0);
	border: 1px solid green;
	box-sizing: border-box;
	flex: 1;
}
/* 
	Setting Value, but split into multiple columns
*/
a.SettingValue {
	flex-grow: 1;
	width: 999px;
	display: flex;
}

/* 
	Setting Value, but split into multiple columns
*/
div.SettingValueSplitRowable {
	display: flex;
	flex-direction: row;
	background-color: rgba(0, 32, 0);
	border: 1px solid green;
	box-sizing: border-box;
	flex-wrap: wrap;
	flex-shrink: 1;
}

/* 
	Setting Value, but split into multiple columns
*/
div.SettingValueRowable {
	display: flex;
	flex-direction: row;
	background-color: rgba(0, 32, 0);
	box-sizing: border-box;
	margin: 0px;
	flex: 1;
	flex-basis: 25%;
}

/* 
	Wide Bar
*/
.WideBar {
	background-color: rgba(0, 64, 0);
	border: 1px solid green;
	color: black;
	text-align: center;
	margin: auto;
	padding: 5px;
	white-space: nowrap;
	color: lime;
	display: inline-block;
	width: 100%;
	box-sizing: border-box;
}
/* 
	Wide Bar when hovered over
*/
.WideBar:hover {
	background-color: green;
	border: 1px solid green;
	text-align: center;
	/* width: auto; */
	color: lime;
}
/* 
	Wide Bar Dark
*/
.WideBarDark {
	background-color: rgba(0, 32, 0);
	border: 1px solid green;
	color: black;
	text-align: center;
	margin: auto;
	padding: 5px;
	white-space: nowrap;
	color: lime;
	display: inline-block;
	width: 100%;
	box-sizing: border-box;
}




/* 
	Link button, no relation to the Tab Table
*/
a.BlockButton {
	background-color: rgba(0, 64, 0);
	border: 1px solid green;
	color: black;
	text-align: center;
	padding: 1px;
	white-space: nowrap;
	color: lime;
	display: inline-block;
	box-sizing: border-box;
}
/* 
	The above button when hovered over
*/
a.BlockButton:hover {
	background-color: green;
	border: 1px solid green;
	text-align: center;
	width: auto;
	color: lime;
}
/* 
	Wrapper BGsplitContainer
*/
div.BGsplitContainer {
	display: flex;
}
/* 
	Left side of the split
*/
div.BGsplit {
	display: flex;
	border: 1px solid green;
	flex: 1;
}


/* 
	Wrapper for the CoolContent
*/
div.uiContent {
	/* cool subtle gradient */
	/* background: linear-gradient(to bottom, rgba(0, 128, 0, 0.3), rgba(0, 128, 0, 0.1)); */
	border: 1px solid green;
	width: auto;
	height: inherit;
	margin: 0px;
	padding: 2px;
	font-size: 12px;
	color: lime;
	font-family: 'Courier New', Courier, monospace;
}
/* 
	ColorBox
*/
div.ColorBox {
	background-color: rgba(0, 64, 0);
	border: 1px solid green;
	color: black;
	padding: 0px;
	white-space: nowrap;
	display: inline-block;
	box-sizing: border-box;
	max-width: fit-content;
}
/* 
	ColorContainer for the cool color thing
*/
div.ColorContainer {
	display: flex;
	flex-direction: row;
	flex-wrap: nowrap;
	margin: 0px;
	padding: 0px;
	font-size: inherit;
	flex: 0 !important;
}
/* 
	ColorName for the cool color thing
*/
div.ColorName {
	display: flex;
	justify-content: center;
	flex-direction: column;
	font-size: inherit;
	border: 1px solid green;
	margin: auto;
	padding: auto;
	text-align: center;
	font-size: 8px;
	line-height: 1;
	height: 100%;
}
/* 
	Cool ColorBox
*/
a.ColorBoxxo {
	border: 1px solid green;
	height: 100%;
	margin: auto;
	padding: 0px !important;
	display: flex;
	justify-content: center;
	flex-direction: column;
}
/* 
	A smol button
*/
a.SmolButton {
	background-color: rgba(0, 64, 0);
	border: 1px solid green;
	text-align: center;
	padding: 5px;
	margin: auto;
	white-space: nowrap;
	color: lime;
	box-sizing: border-box;
	display: flex;
	justify-content: center;
	flex-direction: column;
	flex-shrink: 1;
	height: 100%;
	flex: 1;
	/* font-size: 8px; */
}
/* 
	A spacer
*/
span.Spacer {
	display: flex;
	flex-grow: 999;
	height: 0%;
}
/* 
	PartsContainer
*/
div.PartsContainer {
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	margin: 0px;
	padding: 0px;
	font-size: inherit;
	justify-content: space-between;
	flex: 1;
}
/* 
A part in the PartsContainer
*/
div.PartsFlex {
	display: flex;
	flex-direction: column;
	background-color: rgba(0, 32, 0);
	font-size: inherit;
	flex: 1;
}
/*
A spacer for the PartsFlex
*/
.PartsSpacer {
	display: flex;
	flex-grow: 1;
	flex-shrink: 1;
	margin: 5px 5px 0px 0px;
}
/*
	Subclass for making things be a mostly certain width
*/
.ForceBuffer {
	min-width: 100px;
}

/* 
	CoolDivider, just a line
*/
.CoolDivider {
	border: 1px solid black;
	margin: 0px;
	padding: 0px;
}

/* 
	CoolDivider, just a line
*/
.WideDivider {
	border: 2px solid black;
	margin: 0px;
	padding: 0px;
}

/* 
	hey im smol
*/
.SmolBox {
	flex-shrink: 999 !important;
	flex: 0 !important;
	white-space: nowrap !important;
	font-weight: normal;
}
/* 
	im not so smol
*/
.NotSoSmolBox {
	white-space: wrap !important;
	font-weight: normal;
}

/* 
	Loadout Description
*/
.LoadoutDesc {
	display: flex;
	width: 100%;
	padding: 5px;
	color: lime;
	line-height: 1;
	font-size: 10px;
	box-sizing: border-box;
	border: 1px solid green;
}
/* 
	A cool diagonal line for when you cant afford it!
*/
.CantAfford {
	position: relative;
}
.CantAfford:before {
	content: '';
	position: absolute;
	left: -0.1em;
	right: -0.1em;
	top: 0.38em;
	bottom: 0.38em;
	color: green;
	background: linear-gradient(to left top, transparent 45.5%, currentColor 47.5%, currentColor 52.5%, transparent 54.5%);
	pointer-events: none;
}
/* 
	Shortify
*/
.Shortify {
	flex-basis: 10%;
	width: 10%;
	flex: 1;
}

/* 
	Shortify
*/
.Wider100 {
	min-width: 150px;
}

/* 
	WellPadded
*/
.WellPadded {
	justify-content: space-between;
}
.WellPadded a {
	padding: 2px !important;
	flex-basis: 100px !important;
	white-space: nowrap;
}

/* 
	A cool diagonal line for when you cant afford it!
*/
.EditedEntry {
	position: relative;
}
.EditedEntry:before {
	content: '📄';
	position: absolute;
	right: 0px;
	bottom: 0px;
	color: lime;
	pointer-events: none;
}




